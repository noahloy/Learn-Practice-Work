//Used Jame's Code... Liked this a lot

import React, { useReducer } from "react";
import ToDoList from "./ToDoList";
import NewToDo from "./NewToDo";

function reducer(state, action) {
  const { payload, type } = action;
  switch (type) {
    case "change":
      return { ...state, currentItem: { name: payload } };
    case "submit":
      return { ...state, todos: [...state.todos, { name: payload }] };
    default:
      throw new Error();
  }
}

const initialState = {
  currentItem: { name: `` },
  todos: [{ name: "laundry" }, { name: "buy groceries" }, { name: "mow lawn" }],
};

function App() {
  const [state, dispatch] = useReducer(reducer, initialState);

  function changeHandler(event) {
    console.log(event);
    return dispatch({ type: "change", payload: event.target.value });
  }

  function submitHandler(event) {
    event.preventDefault();
    return dispatch({
      type: `submit`,
      payload: document.querySelector("input").value,
    });
  }

  return (
    <div className="App">
      <ToDoList todos={state.todos} />
      <NewToDo
        onChange={(event) => {
          changeHandler(event);
        }}
        onSubmit={submitHandler}
      />
    </div>
  );
}

export default App;
